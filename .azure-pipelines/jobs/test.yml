parameters:
  pool:

jobs:
- job: Test
  displayName: Test

  pool: ${{ parameters.pool }}
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python.architecture: x64
      Python34:
        python.version: '3.4'
        python.architecture: x64
      Python35:
        python.version: '3.5'
        python.architecture: x64
      Python36:
        python.version: '3.6'
        python.architecture: x64
      Python37:
        python.version: '3.7'
        python.architecture: x64
    maxParallel: 5

  steps:
  - task: UsePythonVersion@0
    displayName: Use Python $(python.version)
    inputs:
      versionSpec: '$(python.version)'

  - bash: pip install --upgrade setuptools tox
    displayName: Install Tox

  - script: tox -e py -- -m unit --junit-xml=junit/unit-test.xml
    displayName: Tox run unit tests

  # Run integration tests in two groups so we will fail faster if there is a failure in the first group
  - script: tox -e py -- -m integration -n 4 --duration=5 -k "not test_install" --junit-xml=junit/integration-test-group0.xml
    displayName: Tox run Group 0 integration tests

  - script: tox -e py -- -m integration -n 4 --duration=5 -k "test_install" --junit-xml=junit/integration-test-group1.xml
    displayName: Tox run Group 1 integration tests

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFiles: junit/*.xml
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
