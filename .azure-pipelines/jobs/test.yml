parameters:
  vmImage:

jobs:
- job: Test_Primary
  displayName: Test Primary

  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
        python.architecture: x64
      Python36:
        python.version: '3.6'
        python.architecture: x64
    maxParallel: 2

  steps:
  - ${{ if eq(parameters.vmImage, 'vs2017-win2017') }}:
    - template: ../steps/run-tests-windows.yml
      parameters:
        runIntegrationTests: true

  - ${{ if ne(parameters.vmImage, 'vs2017-win2017') }}:
    - template: ../steps/run-tests.yml

- job: Test_Secondary
  displayName: Test Secondary
  # Run after Test_Primary so we don't devour time and jobs if tests are going to fail
  dependsOn: Test_Primary

  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      Python34:
        python.version: '3.4'
        python.architecture: x64
      Python35:
        python.version: '3.5'
        python.architecture: x64
      Python37:
        python.version: '3.7'
        python.architecture: x64
      # On Windows, test x86 builds
      ${{ if eq(parameters.vmImage, 'vs2017-win2017') }}:
        Python27-x86:
          python.version: '2.7'
          python.architecture: x86
        Python34-x86:
          python.version: '3.4'
          python.architecture: x86
        Python35-x86:
          python.version: '3.5'
          python.architecture: x86
        Python36-x86:
          python.version: '3.6'
          python.architecture: x86
        Python37-x86:
          python.version: '3.7'
          python.architecture: x86
    maxParallel: 5

  steps:
  - ${{ if eq(parameters.vmImage, 'vs2017-win2017') }}:
    - template: ../steps/run-tests-windows.yml
      parameters:
        runIntegrationTests: false

  - ${{ if ne(parameters.vmImage, 'vs2017-win2017') }}:
    - template: ../steps/run-tests.yml
